Hi Raphael

Heiko und ich haben uns mit Paolo Pastorelli getroffen. Sein Kompatibilitätsproblem war recht simpel. 

•	Der VBA-Code war so geschrieben, dass ein Oracle-ODAC-Treiber verwendet wurde, der folgende Probleme hat
•	Man kann nur entweder einen 32- oder 64-bit ODAC-Treiber haben aber nicht beides, also kein ‘nahtloser’ Übergang von 32 auf 64 bit möglich. 
•	Weiterhin muss der ODAC-Treiber immer exakt dieselbe Version sein wie der Oracle-Treiber, also z.b. ODAC V12 funktioniert nur mit Oracle client V12.
•	Im Company Portal gibt es nur die Oracle-Treiber, aber keinen ODAC-Treiber
•	Die aktuarialen Datenbanken, zu denen verbunden wird, sind auf der Neuesten Oracle-Version 19 – einen alten V12 Treiber zu verwenden zu müssen, nur um den alten VBA Code nicht umschreiben zu müssen, ist also auch ein potentielles Sicherheitsrisiko. Dies könnte bei den anderen Problemfällen evtl ähnlich sein, dass wir eigentlich dort durch Verwendung alter Treiber etc. ebenfalls ein potentielles Sicherheitsproblem haben.

•	Eine Lösungsoption war also, den Code so umzuschreiben, dass kein ODAC mehr benötigt wird, sondern nur noch der Treiber, welcher ja im Unternehmensportal in 32- und 64-bit in der Neuesten Version V19 zur Verfügung steht. Dies habe ich kurz gemacht und der VBA-Code läuft auf 64-Bit, ohne ODAC.
•	Heiko hatte aber dann die brilliante Idee, die Plandaten aus der aktuarialen Datenbank ins SAP zu laden. Damit hat sich nicht nur der Oracle-Treiber erledigt , sondern es hat einen grossen Mehrwert und ist eine grosse Arbeitserleichterung für Paolo, da die Abfrage nun sehr simpel ist, und er auch noch Ist- und Plandaten zusammen enthalten sind,die er dann nicht mehr kombinieren muss
•	Vermutlich gibt es noch andere alte 32-Bit Com-Add-Ins wo die beste Lösung eigentlich SAP heissen würde
•	Heiko berichtet weiterhin, dass oft im COM-Add-in im Header schlicht und einfach die 64-bit Deklaration für z.b. Windows API Variablen vergessen wurde, was ja leicht zu lösen ist  (z.B. Declare PtrSafe Function MessageBox Lib "user32" Alias "MessageBoxA" (ByVal hwnd As LongPtr, ByVal lpText As String, ByVal lpCaption As String, ByVal uType As Long)

Könnte man dann einfach ein 32-Bit Excel via Citrix oder Azure zur Verfügung stellen? 

Darauf könnte Paolo und alle anderen, die möglicherweise noch so alte Skripte haben, diese dann problemlos laufen lassen, und hätte auch gleichzeitig die 64-Bit Version verfügbar für alles Neue.

So hatte es meine vorherige Firma gemacht, vor ca 10 Jahren. Es wurde einige Monate vor dem 64-Bit Upgrade ein 32- und 64-Bit Excel via Citrix zur Verfügung gestellt, damit jeder seine Apps & Dokumente auf beiden Versionen testen konnte. 

Anstatt dass alle Mitarbeiter wegen den ‚Exoten‘ weiter 32-Bit nutzen müssen, können fast alle von 64-Bit profitieren. Und die Exoten wären gleichzeitig auch motiviert ihre 32-Bit Apps loszuweden, damit alles auf ihrem normalen Desktop läuft, und haben auch die Möglichkeit ihr Zeug selbst zu ‚migrieren‘ und testen, da sie sowohl das 64- als auch das 32- Bit Excel zur Verfügung haben. Der nächste Vorteil ist, dass ihr dann komplette Visibilität hättet, wieviele und welche Nutzer genau es noch sind, die noch Office 32-Bit nutzen, ist es nur Paolo, sind es noch 5 weitere?
